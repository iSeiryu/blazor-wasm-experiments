@using System.Text.Json
@using BlazorExperiments.UI.Services;
@inherits LayoutComponentBase
@implements IDisposable
@inject IJSRuntime JS

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private double possibleContentWidth { get; set; } = 0;
    private double possibleContentHeight { get; set; } = 0;
    private const int _remToPxRatio = 16;
    private const int _mediaMinWidth = 641;
    private const int _sideBarWidth = 250;
    private const double _topRowHeight = 3.5;
    private string _topRowHeightClass;
    private string _sideBarWidthClass;

    public void Dispose()
    {
        //BrowserResizeService.OnResize -= BrowserHasResized;
    }

    // protected override async Task OnInitializedAsync()
    // {
    //     BrowserResizeService.OnResize += BrowserHasResized;

    //     await JS.InvokeAsync<object>("browserResize.registerResizeCallback");

    //     await GetMedia();
    // }

    // private async Task BrowserHasResized()
    // {
    //     await GetMedia();
    //     StateHasChanged();
    // }

    // private async Task GetMedia()
    // {
    //     var dimensions = await BrowserResizeService.GetWindowProperties(JS);
    //     SetPossibleContentDimensions(dimensions.Width, dimensions.Height);
    // }

    // private void SetPossibleContentDimensions(double windowWidth, double windowHeight)
    // {
    //     possibleContentWidth = windowWidth - (windowWidth <= _mediaMinWidth ? 0 : _sideBarWidth);
    //     possibleContentHeight = (windowHeight - (_topRowHeight * _remToPxRatio));
    // }
}